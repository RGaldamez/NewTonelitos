/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tonelitosnuevo;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;

/**
 *
 * @author rick
 */
public class Tonelitos extends javax.swing.JFrame {

    /**
     * Creates new form Tonelitos
     */
    public Tonelitos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_relations = new javax.swing.JDialog();
        jc_inicial = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jc_final = new javax.swing.JComboBox();
        jd_eraseRelations = new javax.swing.JDialog();
        jc_vertice = new javax.swing.JComboBox();
        jButton6 = new javax.swing.JButton();
        Tabla = new javax.swing.JDialog();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        Dijkstra = new javax.swing.JDialog();
        jc_inicialDijkstra = new javax.swing.JComboBox();
        jc_finalDijkstra = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        Floyd = new javax.swing.JDialog();
        jc_inicialFloyd = new javax.swing.JComboBox();
        jc_finalFloyd = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jb_addImage = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jp_lblparent = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jp_graphics = new javax.swing.JPanel();
        jl_image = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();

        jLabel1.setText("Vértice Inicial");

        jLabel2.setText("Vértice Final");

        jButton4.setText("Agregar Relacion");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jd_relationsLayout = new javax.swing.GroupLayout(jd_relations.getContentPane());
        jd_relations.getContentPane().setLayout(jd_relationsLayout);
        jd_relationsLayout.setHorizontalGroup(
            jd_relationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_relationsLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jd_relationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jc_inicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addGroup(jd_relationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jc_final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85))
            .addGroup(jd_relationsLayout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jd_relationsLayout.setVerticalGroup(
            jd_relationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_relationsLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jd_relationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jd_relationsLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(62, 62, 62))
                    .addGroup(jd_relationsLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(39, 39, 39)
                        .addGroup(jd_relationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jc_inicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jc_final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(60, 60, 60)
                .addComponent(jButton4)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        jButton6.setText("Eliminar Vértice con sus relaciones");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jd_eraseRelationsLayout = new javax.swing.GroupLayout(jd_eraseRelations.getContentPane());
        jd_eraseRelations.getContentPane().setLayout(jd_eraseRelationsLayout);
        jd_eraseRelationsLayout.setHorizontalGroup(
            jd_eraseRelationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_eraseRelationsLayout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(jc_vertice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_eraseRelationsLayout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addGap(69, 69, 69))
        );
        jd_eraseRelationsLayout.setVerticalGroup(
            jd_eraseRelationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_eraseRelationsLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jc_vertice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton6)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jButton8.setText("Dijkstra");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Floyd");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TablaLayout = new javax.swing.GroupLayout(Tabla.getContentPane());
        Tabla.getContentPane().setLayout(TablaLayout);
        TablaLayout.setHorizontalGroup(
            TablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablaLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jButton8)
                .addGap(80, 80, 80)
                .addComponent(jButton9)
                .addContainerGap(105, Short.MAX_VALUE))
        );
        TablaLayout.setVerticalGroup(
            TablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablaLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(TablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addContainerGap(102, Short.MAX_VALUE))
        );

        jc_inicialDijkstra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc_inicialDijkstraActionPerformed(evt);
            }
        });

        jLabel3.setText("Nodo Inicial");

        jLabel4.setText("Nodo Final");

        jButton5.setText("Buscar Con Dijkstra");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton12.setText("Generar Reporte");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DijkstraLayout = new javax.swing.GroupLayout(Dijkstra.getContentPane());
        Dijkstra.getContentPane().setLayout(DijkstraLayout);
        DijkstraLayout.setHorizontalGroup(
            DijkstraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DijkstraLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(DijkstraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jc_inicialDijkstra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addGroup(DijkstraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jc_finalDijkstra, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(92, 92, 92))
            .addGroup(DijkstraLayout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(DijkstraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton12)
                    .addComponent(jButton5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DijkstraLayout.setVerticalGroup(
            DijkstraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DijkstraLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(DijkstraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(31, 31, 31)
                .addGroup(DijkstraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jc_inicialDijkstra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jc_finalDijkstra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76)
                .addComponent(jButton5)
                .addGap(18, 18, 18)
                .addComponent(jButton12)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jLabel5.setText("Nodo Inicial");

        jLabel6.setText("Nodo Final");

        jButton10.setText("Buscar Con Floyd");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton13.setText("Generar Reporte");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FloydLayout = new javax.swing.GroupLayout(Floyd.getContentPane());
        Floyd.getContentPane().setLayout(FloydLayout);
        FloydLayout.setHorizontalGroup(
            FloydLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FloydLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(FloydLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jc_inicialFloyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addGroup(FloydLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jc_finalFloyd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(92, 92, 92))
            .addGroup(FloydLayout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(FloydLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton13)
                    .addComponent(jButton10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FloydLayout.setVerticalGroup(
            FloydLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FloydLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(FloydLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(31, 31, 31)
                .addGroup(FloydLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jc_inicialFloyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jc_finalFloyd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76)
                .addComponent(jButton10)
                .addGap(27, 27, 27)
                .addComponent(jButton13)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jb_addImage.setText("Add Image");
        jb_addImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_addImageActionPerformed(evt);
            }
        });

        jButton1.setText("Exportar Grafo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jp_lblparent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jp_lblparentMouseClicked(evt);
            }
        });
        jp_lblparent.setLayout(null);

        jButton2.setText("Add Relation");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("AddVertex");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jp_graphics.setOpaque(false);
        jp_graphics.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jp_graphicsMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_graphicsLayout = new javax.swing.GroupLayout(jp_graphics);
        jp_graphics.setLayout(jp_graphicsLayout);
        jp_graphicsLayout.setHorizontalGroup(
            jp_graphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 830, Short.MAX_VALUE)
        );
        jp_graphicsLayout.setVerticalGroup(
            jp_graphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 865, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap(17, Short.MAX_VALUE)
                    .addComponent(jp_graphics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(18, Short.MAX_VALUE)))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addComponent(jl_image, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(18, Short.MAX_VALUE)))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 632, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jp_graphics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(41, Short.MAX_VALUE)))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jl_image, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jLayeredPane1.setLayer(jp_graphics, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jl_image, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton7.setText("Borrar relacion/ Vértice");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton11.setText("Buscar el Camino mas corto de un Nodo a otro");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton14.setText("Importar Grafo");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jp_lblparent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton11)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton7)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jb_addImage)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton14)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jp_lblparent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 631, Short.MAX_VALUE))
                    .addComponent(jLayeredPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_addImage)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton7)
                    .addComponent(jButton2)
                    .addComponent(jButton14))
                .addGap(18, 18, 18)
                .addComponent(jButton11)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_addImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_addImageActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Imagenes", "jpg", "png", "bmp", "mpg", "ico");
        chooser.setFileFilter(filter);

        int Okoption;

        Okoption = chooser.showOpenDialog(this);

        if (Okoption == JFileChooser.APPROVE_OPTION) {
            imagen = chooser.getSelectedFile();
            icon = new ImageIcon(imagen.getAbsolutePath());

            int imgHeight = jl_image.getHeight();
            int imgWidth = jl_image.getWidth();

            img = icon.getImage();
            newImg = img.getScaledInstance(imgWidth, imgHeight, java.awt.Image.SCALE_SMOOTH);
            icon = new ImageIcon(newImg);
            jl_image.setIcon(icon);
        }
    }//GEN-LAST:event_jb_addImageActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean isEmpty = false;
        for (int i = 0; i < grafo.getNodos().size(); i++) {
            if (grafo.getNodos().get(i).getAristas().isEmpty()){
                isEmpty = true;
                break;
            }
        }
        JFileChooser chooser = new JFileChooser();
        int seleccion  = chooser.showSaveDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION){
            File file=null;
            File temp;
            FileWriter fw=null;
            BufferedWriter writer = null;
            try {
                temp = chooser.getSelectedFile();
                file = new File(temp.getAbsolutePath()+".grph");
                fw = new FileWriter (file);
                writer = new BufferedWriter (fw);
                if (fw == null || writer == null ){
                    System.err.println("es 0.0000000000000000000000000000000001% probable que esta linea salga, revisar exportacion de grafo");
                }else{
                    for (int i = 0; i < grafo.getNodos().size(); i++) {
                    writer.write(grafo.getNodos().get(i).getID()+",");
                    writer.write(grafo.getNodos().get(i).getNombre()+",");
                    writer.write(grafo.getNodos().get(i).getCoordenada().getX()+",");
                    if (grafo.getNodos().get(i).getAristas().isEmpty()){
                        writer.write(grafo.getNodos().get(i).getCoordenada().getY()+",");
                    }else{
                        writer.write(grafo.getNodos().get(i).getCoordenada().getY()+",;");
                        for (int j = 0; j < grafo.getNodos().get(i).getAristas().size(); j++) {
                            writer.write(grafo.getNodos().get(i).getAristas().get(j).getNodoInicial().getID()+"/");
                            writer.write(grafo.getNodos().get(i).getAristas().get(j).getNodoFinal().getID()+"/");
                            writer.write(Long.toString(grafo.getNodos().get(i).getAristas().get(j).getDistancia())+"/;");
                        }
                    }
                    writer.write("\r");
                    }
                    writer.flush();
                    JOptionPane.showMessageDialog(this, "Archivo creado con exito");
                }
                
            } catch (Exception e) {
            } finally{
                try {
                    writer.close();
                    fw.close();
                } catch (Exception e) {
                }
                
            }
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JOptionPane.showMessageDialog(this, "Porfavor haga click en el mapa donde iria el nuevo vértice", "New Vertex", JOptionPane.INFORMATION_MESSAGE);
        addVertex = true;
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        DefaultComboBoxModel model2 = new DefaultComboBoxModel();
        for (int i = 0; i < grafo.getNodos().size(); i++) {
            model.addElement(grafo.getNodos().get(i).getNombre());
            model2.addElement(grafo.getNodos().get(i).getNombre());
        }
        this.jc_final.setModel(model);
        this.jc_inicial.setModel(model2);
        openDialog(this.jd_relations);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int indexInicial = jc_inicial.getSelectedIndex();
        int indexFinal = jc_final.getSelectedIndex();
        int distance;
        if (indexFinal == indexInicial) {
            JOptionPane.showMessageDialog(this, "No puede seleccionar el mismo vértice", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            distance = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese la distancia entre los vértices"));
            grafo.getNodos().get(indexInicial).getAristas().add(new Arista(distance, grafo.getNodos().get(indexInicial), grafo.getNodos().get(indexFinal)));
            refresh();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jp_lblparentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jp_lblparentMouseClicked
        Graphics draw = this.jp_graphics.getGraphics();
        int x = evt.getX();
        int y = evt.getY();

        if (addVertex && this.jl_image.getIcon() != null) {
            grafo.getNodos().add(new Node());
            grafo.getNodos().get(grafo.getNodos().size() - 1).setCoordenada(new Coordenada(x - 10, y - 10));
            grafo.getNodos().get(grafo.getNodos().size() - 1).setID(grafo.getNodos().size() - 1);
            //draw.drawOval(x-10, y-10, 25, 25);
            //draw.fillOval(x-10, y-10, 25, 25);

            refresh();
            addVertex = false;
        } else if (addVertex && this.jl_image.getIcon() == null) {
            JOptionPane.showMessageDialog(this, "Porfavor ingrese un mapa primero", "Error", JOptionPane.ERROR_MESSAGE);
            addVertex = false;
        }
    }//GEN-LAST:event_jp_lblparentMouseClicked

    private void jp_graphicsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jp_graphicsMouseClicked

        int x = evt.getX();
        int y = evt.getY();

        
            grafo.getNodos().add(new Node());
            grafo.getNodos().get(grafo.getNodos().size() - 1).setCoordenada(new Coordenada(x - 10, y - 10));
            grafo.getNodos().get(grafo.getNodos().size() - 1).setID(grafo.getNodos().size()-1);
            grafo.getNodos().get(grafo.getNodos().size()-1).setNombre(Abecedario[iteradorabc]);
            iteradorabc++;

            refresh();
            addVertex = false;
            
        
    }//GEN-LAST:event_jp_graphicsMouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        DefaultComboBoxModel model3 = new DefaultComboBoxModel();
        for (int i = 0; i < grafo.getNodos().size(); i++) {

            model3.addElement(grafo.getNodos().get(i).getNombre());
        }

        this.jc_vertice.setModel(model3);

        openDialog(this.jd_eraseRelations);
        refresh();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int index = jc_vertice.getSelectedIndex();
        grafo.removeVertex(index);
        this.setSize(this.getWidth()+1, this.getHeight()+1);
        this.setSize(this.getWidth()-1, this.getHeight()-1);
        refresh();
        
        DefaultComboBoxModel model3 = new DefaultComboBoxModel();
        for (int i = 0; i < grafo.getNodos().size(); i++) {

            model3.addElement(grafo.getNodos().get(i).getNombre());
        }

        this.jc_vertice.setModel(model3);
        JOptionPane.showMessageDialog(this,"Vértice eliminado con exito, por favor cerrar esta ventana para mostrar los cambios","",JOptionPane.INFORMATION_MESSAGE);
        

        
        refresh();
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        DefaultComboBoxModel model2 = new DefaultComboBoxModel();
        for (int i = 0; i < grafo.getNodos().size(); i++) {
            model.addElement(grafo.getNodos().get(i).getNombre());
            model2.addElement(grafo.getNodos().get(i).getNombre());
        }
        this.jc_finalDijkstra.setModel(model);
        this.jc_inicialDijkstra.setModel(model2);
        openDialog(this.Dijkstra);        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        DefaultComboBoxModel model2 = new DefaultComboBoxModel();
        for (int i = 0; i < grafo.getNodos().size(); i++) {
            model.addElement(grafo.getNodos().get(i).getNombre());
            model2.addElement(grafo.getNodos().get(i).getNombre());
        }
        this.jc_finalFloyd.setModel(model);
        this.jc_inicialFloyd.setModel(model2);
        openDialog(this.Floyd);        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        openDialog(this.Tabla);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        ArrayList<Arista> aristasDijkstra = new ArrayList();
        
        int indexInicial = jc_inicialDijkstra.getSelectedIndex();
        int indexFinal = jc_finalDijkstra.getSelectedIndex();
        
        aristasDijkstra = grafo.summonDijkstra(indexInicial,indexFinal);
        
        for (int i = 0; i < aristasDijkstra.size(); i++) {
            System.out.println(aristasDijkstra.get(i).toString());
        }
        
        
        hasDijkstra = true;
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jc_inicialDijkstraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc_inicialDijkstraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jc_inicialDijkstraActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
               
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        /*
        int indexInicial = this.jc_inicialFloyd.getSelectedIndex();
        int indexFinal = this.jc_finalFloyd.getSelectedIndex();
        
        tempFloyd = grafo.FLoyd(grafo.getNodos().get(indexInicial), grafo.getNodos().get(indexFinal));
        
        for (int i = 0; i < tempFloyd.size(); i++) {
            System.out.println(tempFloyd.get(i).getValue()+ "");
        }
        */
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        //FileNameExtensionFilter filter = new FileNameExtensionFilter ("Archivo de grafo","grph");
        
        JFileChooser chooser = new JFileChooser();
        //chooser.setFileFilter(filter);
        int seleccion = chooser.showOpenDialog(this);
        
        if (seleccion == JFileChooser.APPROVE_OPTION){
            grafo = new Grafo();
            this.setSize(this.getWidth()+1, this.getHeight()+1);
            this.setSize(this.getWidth()-1, this.getHeight()-1);
            String stringGeneral;
            String generalTemp;
            String []nodos;
            String generalAristas;
            String []aristas;
            String []datosArista;
            int ID;
            String Nombre;
            int X;
            int Y;
            int indexhasAristas=-1;
            boolean hasAristas = false;
            File file = chooser.getSelectedFile();
            FileReader fr = null;
            BufferedReader reader = null;
            try {
                fr = new FileReader(file);
                reader = new BufferedReader(fr);
                
                while ((generalTemp = reader.readLine())!=null){
                    stringGeneral = generalTemp;
                    System.out.println(stringGeneral);
                    //confirma que tiene aristas desde un principio
                    for (int i = 0; i < stringGeneral.length(); i++) {
                        if (stringGeneral.charAt(i) == ';'){
                            hasAristas = true;
                            indexhasAristas = i+1;
                            break;
                        }
                    }
                    nodos = stringGeneral.split(",");
                    if (hasAristas){
                        generalAristas = "";
                        for (int i = indexhasAristas; i < stringGeneral.length(); i++) {
                            generalAristas+=stringGeneral.charAt(i);
                        }
                        aristas = generalAristas.split(";");
                        
                        
                        
                        /////////////aqui se pone bueno
                        ID = Integer.parseInt(nodos[0]);
                        Nombre = nodos[1];
                        X = Integer.parseInt(nodos[2]);
                        Y = Integer.parseInt(nodos[3]);
                        grafo.getNodos().add(new Node(ID,Nombre,new Coordenada (X,Y)));
                        for (String arista : aristas) {
                            datosArista = arista.split("/");
                            grafo.getNodos().get(grafo.getNodos().size()-1).getAristas().add(new Arista (Long.parseLong(datosArista[2]),
                                    Integer.parseInt(datosArista[0]),
                                    Integer.parseInt(datosArista[1])));
                        }
                    }else{
                        nodos = stringGeneral.split(",");
                          
                        ID = Integer.parseInt(nodos[0]);
                        Nombre = nodos[1];
                        X = Integer.parseInt(nodos[2]);
                        Y = Integer.parseInt(nodos[3]);
                        grafo.getNodos().add(new Node(ID,Nombre,new Coordenada (X,Y)));
                    }
                    
                    
                    
                }
                for (int i = 0; i < grafo.getNodos().size(); i++) {
                        for (int j = 0; j < grafo.getNodos().get(i).getAristas().size(); j++) {
                            grafo.getNodos().get(i).getAristas().get(j).setNodoInicial(grafo.getNodos().get(grafo.getNodos().get(i).getAristas().get(j).getInicial()));
                            grafo.getNodos().get(i).getAristas().get(j).setNodoFinal(grafo.getNodos().get(grafo.getNodos().get(i).getAristas().get(j).getFinall()));
                        }
                    }
                    iteradorabc = grafo.getNodos().size();
                    
                    
            } catch (Exception e) {
                
            }finally{
                try {
                    reader.close();
                    fr.close();
                } catch (Exception e) {
                }
            }
            ////////////////// RECORDAR HACER QUE LAS ARISTAS SEAN VALIDAS!!!!!!!!!!!!!!!!!!!!!!!!!!
            ///////////////// TAMBIEN SETEAR EL contadorabc
            JOptionPane.showMessageDialog(this, "Grafo agregado con exito");
            refresh();
            System.out.println(grafo.getNodos().size());
        }
        
    }//GEN-LAST:event_jButton14ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tonelitos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tonelitos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tonelitos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tonelitos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tonelitos().setVisible(true);
            }
        });
    }

    public void refresh() {
       
        
        //jp_graphics.updateUI();
        
        
        //g.clearRect(0, 0, jp_graphics.getWidth(), jp_graphics.getHeight());
        
        //jp_graphics.removeAll();
        Font font = new Font ("Dialog",Font.BOLD,14);
        Graphics g = this.jp_graphics.getGraphics();
        g.setFont(font);
        
        
        for (int i = 0; i < grafo.getNodos().size(); i++) {
            g.setColor(Color.RED);
            g.drawOval(grafo.getNodos().get(i).getCoordenada().getX(),
                    grafo.getNodos().get(i).getCoordenada().getY(),
                    30, 30);
            g.fillOval(grafo.getNodos().get(i).getCoordenada().getX(),
                    grafo.getNodos().get(i).getCoordenada().getY(),
                    30, 30);
            System.out.println("X" + (i + 1) + ": " + grafo.getNodos().get(i).getCoordenada().getX());
            System.out.println("Y" + (i + 1) + ": " + grafo.getNodos().get(i).getCoordenada().getY() + "\n");
        }

        int x1, x2, y1, y2;

        for (int i = 0; i < grafo.getNodos().size(); i++) {
            
            for (int j = 0; j < grafo.getNodos().get(i).getAristas().size(); j++) {
                try {
                    x1 =  grafo.getNodos().get(i).getAristas().get(j).getNodoInicial().getID();
                    y1 =  grafo.getNodos().get(i).getAristas().get(j).getNodoInicial().getID();
                    x2 =  grafo.getNodos().get(i).getAristas().get(j).getNodoFinal().getID();
                    y2 =  grafo.getNodos().get(i).getAristas().get(j).getNodoFinal().getID();
                    g.setColor(Color.RED);
                    g.drawLine(grafo.getNodos().get(x1).getCoordenada().getX() + 15,
                        grafo.getNodos().get(y1).getCoordenada().getY()+15,
                        grafo.getNodos().get(x2).getCoordenada().getX()+15,
                        grafo.getNodos().get(y2).getCoordenada().getY()+15);
                    g.setColor(Color.BLUE);
                    g.drawString(Long.toString(grafo.getNodos().get(i).getAristas().get(j).getDistancia()), 
                            ((grafo.getNodos().get(x1).getCoordenada().getX()+15)+(grafo.getNodos().get(x2).getCoordenada().getX()+15))/2, ((grafo.getNodos().get(y1).getCoordenada().getY()+15)+(grafo.getNodos().get(y2).getCoordenada().getY()+15))/2);
                    g.setColor(Color.RED);
                    
                } catch (Exception e) {
                }
                

            }

        }
        
        for (int i = 0; i < grafo.getNodos().size(); i++) {
            g.setColor(Color.BLACK);
            g.drawString(grafo.getNodos().get(i).getNombre(),grafo.getNodos().get(i).getCoordenada().getX()+10 
                    , grafo.getNodos().get(i).getCoordenada().getY()+18);
            
        }

    }

    public void openDialog(JDialog Dialog) {
        Dialog.setLocationRelativeTo(this);
        Dialog.setModal(true);
        Dialog.pack();
        Dialog.setVisible(true);

    }
    
    public boolean isCompletelyRelated(){
        
        
        
        
        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Dijkstra;
    private javax.swing.JDialog Floyd;
    private javax.swing.JDialog Tabla;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JButton jb_addImage;
    private javax.swing.JComboBox jc_final;
    private javax.swing.JComboBox jc_finalDijkstra;
    private javax.swing.JComboBox jc_finalFloyd;
    private javax.swing.JComboBox jc_inicial;
    private javax.swing.JComboBox jc_inicialDijkstra;
    private javax.swing.JComboBox jc_inicialFloyd;
    private javax.swing.JComboBox jc_vertice;
    private javax.swing.JDialog jd_eraseRelations;
    private javax.swing.JDialog jd_relations;
    private javax.swing.JLabel jl_image;
    private javax.swing.JPanel jp_graphics;
    private javax.swing.JPanel jp_lblparent;
    // End of variables declaration//GEN-END:variables
    private Color red = Color.RED;
    private Grafo grafo = new Grafo();
    private int contadorNodos = 0;
    private ImageIcon icon = null;
    private boolean addVertex = false;
    private File imagen;
    private Image img, newImg;
    private ArrayList<Integer> tempDijkstra = new ArrayList();
    private ArrayList<Integer> tempFloyd = new ArrayList();
    private boolean hasDijkstra=false;
    private boolean hasFloyd=false;
    private String Abecedario[] ={"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R",
    "S","T","U","V","W","X","Y","Z","A1","B1","C1","D1","E1","F1","G1","H1","I1","J1","K1","L1","M1","N1","O1","P1","Q1","R1",
    "S1","T1","U1","V1","W1","X1","Y1","Z1","A2","B2","C2","D2","E2","F2","G2","H2","I2","J2","K2","L2","M2","N2","O2","P2","Q2","R2",
    "S2","T2","U2","V2","W2","X2","Y2","Z2"};
    private int iteradorabc = 0;
    boolean dimsensionar = false;

}

